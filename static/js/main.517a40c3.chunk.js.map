{"version":3,"sources":["redux-form/validator.js","components/Preloader.js","components/DeleteModal.js","redux-form/FormControl.js","components/EditModal.js","components/Item.js","api/api.js","redux/item-reducer.js","components/CreateModal.js","components/ListContainer.js","components/Detail.js","App.js","redux/app-reducer.js","redux/reducer.js","index.js","images/1_9EBHIOzhE1XfMYoKz1JcsQ.gif"],"names":["min","max","Preloader","props","style","backgroung","display","alignItems","src","preloader","alignSelf","DeleteModal","setDeleteModal","deleteItemById","id","history","useHistory","className","onClick","replace","required","value","undefined","lengthValid","length","renderInput","input","placeholder","type","meta","touched","error","warning","EditModal","editItem","setEditModal","editItemById","fetch","EditForm","reduxForm","form","initialValues","item","title","handleSubmit","onSubmit","Field","name","validate","component","values","console","log","Item","index","setCurrent","useState","editModal","deleteModal","to","useApi","loading","setLoading","api","useCallback","url","a","method","body","headers","JSON","stringify","response","json","data","ok","Error","message","initialState","items","currentItem","itemsReducer","state","action","current","CreateModal","setCreateModal","createItem","CreateForm","ListContainer","connect","fetchItems","dispatch","fetchItemsAC","setCurrentAC","createModal","fetched","useEffect","map","key","Detail","match","params","appInitialized","app","exact","path","render","appReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.517a40c3.chunk.js","sourcesContent":["\r\n//проверка на пустоту\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Поле пустое')\r\n\r\n\r\n\r\n//проверка на колво символов\r\nconst Length = (min,max) => value =>\r\n    value && (value.length < min || value.length > max) ? `Должно быть ${min} и меньше ${max} символов` : undefined\r\n\r\nexport const lengthValid = Length(6,50)\r\n","import React from \"react\";\r\nimport preloader from '../images/1_9EBHIOzhE1XfMYoKz1JcsQ.gif'\r\n\r\nexport const Preloader = (props) => {\r\n    return <div style={{backgroung: 'white', display:'flex',alignItems:'center'}}>\r\n        <img src={preloader} style={{alignSelf:'center'}}/>\r\n    </div>\r\n\r\n}","import React, {Fragment} from 'react'\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nexport const DeleteModal = ({setDeleteModal,deleteItemById, id}) => {\r\n    const history = useHistory()\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"modal__created-blur\"></div>\r\n            <div className=\"item__card\">\r\n                <div className=\"item__card-header\">\r\n                    <div className=\"item__card-title\">Вы точно хотите удалить данный элемент?</div>\r\n                    <div className=\"item__card-close\" onClick={() => setDeleteModal(false)}></div>\r\n                </div>\r\n                <div className=\"delete__card\">\r\n                    <button className=\"delete-btn\" onClick ={() => {\r\n                        deleteItemById(id);\r\n                        setDeleteModal(false)\r\n                        history.replace('/')\r\n                    }}>Удалить</button>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const renderInput = ({\r\n                                input,\r\n                                placeholder,\r\n                                type,\r\n                                meta: { touched, error, warning }\r\n                            }) => (\r\n        <div className ={(touched && (error || warning))? \"input__error\" : \" \"}>\r\n            <input {...input} placeholder={placeholder} type={type} />\r\n            {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n                (warning && <span>{warning}</span>))}\r\n        </div>\r\n)\r\n","import React, {Fragment, useState} from 'react'\r\nimport {useHistory} from \"react-router\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {lengthValid, required} from \"../redux-form/validator\";\r\nimport {renderInput} from \"../redux-form/FormControl\";\r\n\r\n\r\nexport const EditModal = ({editItem,setEditModal,editItemById,fetch}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const Edit = ({handleSubmit}) => {\r\n        return(\r\n            <form onSubmit ={handleSubmit}>\r\n                <Field\r\n                    className=\"edit__input\"\r\n                    name =\"item\"\r\n                    validate ={[required,lengthValid]}\r\n                    component = {renderInput}\r\n                />\r\n                <button className= \"create-btn\" type=\"submit\">Редактировать</button>\r\n            </form>\r\n        )\r\n    }\r\n    const EditForm = reduxForm({form: 'edit',initialValues: {item: editItem.title}})(Edit)\r\n\r\n    //нажатие на кнопку отправки\r\n    const send = values => {\r\n        console.log(values.item)\r\n        editItemById(editItem.id,values.item);\r\n        setEditModal(false)\r\n        history.replace('/')\r\n    }\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"modal__created-blur\"></div>\r\n            <div className=\"item__card\">\r\n                    <div className=\"item__card-header\">\r\n                        <div className=\"item__card-title\">Редактирование задания</div>\r\n                        <div className=\"item__card-close\" onClick={() => setEditModal(false)}></div>\r\n                    </div>\r\n                <EditForm onSubmit={send}/>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, {Fragment, useState} from \"react\"\r\nimport {FiTrash2, FiEdit2} from 'react-icons/fi';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DeleteModal} from \"./DeleteModal\";\r\nimport {EditModal} from \"./EditModal\";\r\n\r\nexport const Item = ({item,index,setCurrent,deleteItemById,editItemById}) => {\r\n    const [editModal,setEditModal] =useState(false)\r\n    const [deleteModal,setDeleteModal] =useState(false)\r\n    return(\r\n        <Fragment>\r\n            {editModal && <EditModal\r\n                setEditModal={setEditModal}\r\n                editItemById={editItemById}\r\n                editItem={item}\r\n                fetch={fetch}/>}\r\n            {deleteModal && <DeleteModal\r\n                setDeleteModal={setDeleteModal}\r\n                deleteItemById={deleteItemById}\r\n                id={item.id}\r\n                fetch={fetch}/>}\r\n        <tr className=\"item__row\">\r\n            <td className='item__index' onClick={() => {setCurrent(item)}}>\r\n                <NavLink className =\"item__link\" to={`/items/${index + 1}`}>\r\n                    Задача №{index + 1}\r\n                </NavLink>\r\n            </td>\r\n            <td className='item__description'>{item.title}</td>\r\n            <td className=\"item__manipulation\">\r\n                <div className=\"item__details\" onClick={() => {setEditModal(true)}}>\r\n                    <FiEdit2/>\r\n                </div>\r\n                <div className=\"item__delete\" onClick={() => {setDeleteModal(true)}}>\r\n                    <FiTrash2/>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        </Fragment>\r\n\r\n\r\n    )\r\n}","import {useState,useCallback}  from'react'\r\n\r\nexport const useApi = () => {\r\n    const[loading,setLoading] =useState(false)\r\n\r\n\r\n    const api = useCallback(async (url, method ='GET', body = null, headers ={}) => {\r\n        setLoading(true)\r\n        try {\r\n            //для отправки корректного тела запроса\r\n            if(body){\r\n                body = JSON.stringify(body)\r\n                headers['Content-type'] ='application/json'\r\n            }\r\n            const response = await fetch(url,{method, body, headers})\r\n            const data = await response.json()\r\n            console.log(data)\r\n            if (!response.ok){\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n            setLoading(false)\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            throw e\r\n\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n    return {loading, api}\r\n}","\r\nconst initialState = {\r\n    items:[],\r\n    currentItem: {title:'Очень хорошо'}\r\n}\r\n\r\nconst itemsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FETCH_ITEMS\":\r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            };\r\n            case \"SET_CURRENT\":\r\n                console.log(action.current)\r\n            return {\r\n                ...state,\r\n                currentItem: action.current\r\n            };\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default itemsReducer\r\n\r\n//--------------------Action Creators----------------------------\r\n\r\nexport const fetchItemsAC = items => ({type: \"FETCH_ITEMS\", items})\r\nexport const setCurrentAC = current => ({type: \"SET_CURRENT\", current})\r\n\r\n//--------------------Redux-thunk--------------------------------\r\n\r\nexport const fetchItems = items => dispatch => {\r\n    dispatch(fetchItemsAC(items));\r\n};\r\nexport const setCurrent = current => dispatch => {\r\n\r\n    dispatch(setCurrentAC(current));\r\n    console.log(current)\r\n};","import React, {Fragment} from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {useHistory} from \"react-router\";\r\n\r\n//импорт формы\r\nimport {lengthValid, required} from \"../redux-form/validator\";\r\nimport {renderInput} from \"../redux-form/FormControl\";\r\n\r\n\r\nexport const CreateModal = ({setCreateModal,createItem}) => {\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    const Create = ({handleSubmit}) => {\r\n        return(\r\n            <form onSubmit ={handleSubmit}>\r\n                <Field\r\n                    name =\"createItem\"\r\n                    validate ={[required,lengthValid]}\r\n                    component = {renderInput}\r\n                />\r\n                <button className= \"create-btn\" type=\"submit\">Создать</button>\r\n            </form>\r\n        )\r\n    }\r\n    const CreateForm = reduxForm({form: 'create'})(Create)\r\n\r\n    //нажатие на кнопку отправки\r\n    const send = values => {\r\n        createItem(values.createItem);\r\n        setCreateModal(false)\r\n        history.replace('/')\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"modal__created-blur\"></div>\r\n            <div className=\"item__card\">\r\n                <div className=\"item__card-header\">\r\n                    <div className=\"item__card-title\">Краткое описание</div>\r\n                    <div className=\"item__card-close\" onClick={() => setCreateModal(false)}>\r\n                    </div>\r\n                </div>\r\n                <CreateForm onSubmit ={send}/>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n","import React, {Fragment, useCallback, useEffect, useState} from 'react'\r\nimport {Item} from \"./Item\";\r\nimport {useApi} from '../api/api'\r\nimport {Preloader} from \"./Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchItems, setCurrent} from \"../redux/item-reducer\";\r\nimport {CreateModal} from \"./CreateModal\";\r\n\r\n\r\nconst List = ({items, fetchItems, setCurrent}) => {\r\n\r\n    const [createModal, setCreateModal] = useState(false)\r\n\r\n    const {loading, api} = useApi()\r\n\r\n    const fetch = useCallback(async () => {\r\n        try {\r\n            const fetched = await api('https://test.megapolis-it.ru/api/list', 'GET')\r\n            console.log(fetched.data)\r\n            fetchItems(fetched.data)\r\n        } catch (e) {\r\n        }\r\n    }, [api])\r\n\r\n    const createItem = useCallback(async (item) => {\r\n        try {\r\n            await api('https://test.megapolis-it.ru/api/list', 'POST', {title: item})\r\n            const fetched = await api('https://test.megapolis-it.ru/api/list', 'GET')\r\n            fetchItems(fetched.data)\r\n        } catch (e) {\r\n        }\r\n    }, [api])\r\n\r\n    const editItemById = useCallback(async (id, item) => {\r\n        try {\r\n            await api(`https://test.megapolis-it.ru/api/list/${id}`, 'POST', {id, title: item})\r\n            const fetched = await api('https://test.megapolis-it.ru/api/list', 'GET')\r\n            fetchItems(fetched.data)\r\n        } catch (e) {\r\n        }\r\n    }, [api])\r\n\r\n    const deleteItemById = useCallback(async (id) => {\r\n        try {\r\n            await api(`https://test.megapolis-it.ru/api/list/${id}`, 'DELETE')\r\n            const fetched = await api('https://test.megapolis-it.ru/api/list', 'GET')\r\n            fetchItems(fetched.data)\r\n        } catch (e) {\r\n        }\r\n    }, [api])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch()\r\n    }, [fetch, createItem])\r\n\r\n    return (\r\n        loading\r\n            ? <Preloader/>\r\n            : <Fragment>\r\n                <header className=\"header\">\r\n                    <div className=\"header__wrapper\">\r\n                        {createModal &&\r\n                        <CreateModal setCreateModal={setCreateModal} createItem={createItem} fetch={fetch}/>}\r\n                        <div className='header__title'>Список</div>\r\n                        <button className=\"header__button\" onClick={() => setCreateModal(true)}>Добавить</button>\r\n                    </div>\r\n                </header>\r\n\r\n                <section className=\"item\">\r\n                    <table>\r\n                        {items.map((item, index) => {\r\n                            return <Item key={index}\r\n                                         item={item}\r\n                                         index={index}\r\n                                         setCurrent={setCurrent}\r\n                                         editItemById={editItemById}\r\n                                         deleteItemById={deleteItemById}\r\n                                         fetch={fetch}\r\n                            />\r\n                        })}\r\n                    </table>\r\n                </section>\r\n            </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    items: state.items.items\r\n});\r\n\r\n\r\nexport const ListContainer = connect(mapStateToProps, {fetchItems, setCurrent})(List);\r\n\r\n\r\n","import React, {Fragment, useEffect} from 'react'\r\nimport {Preloader} from \"./Preloader\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Det = ({match, currentItem}) => {\r\n    console.log(match)\r\n\r\n\r\n    console.log(currentItem)\r\n\r\n    return (\r\n        !currentItem\r\n            ? <Preloader/>\r\n            : <header className=\"header\">\r\n                <div className=\"detail\">\r\n                    <div className=\"detail__title\">Задача № {match.params.id}</div>\r\n                    <div className=\"detail__text\">Краткое описание</div>\r\n                    <div className=\"detail__main\">\r\n                        {currentItem.title}\r\n                    </div>\r\n                    <NavLink to=\"/\">\r\n                        <button className=\"detail__button\">Вернуться в список</button>\r\n                    </NavLink>\r\n                </div>\r\n            </header>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({currentItem: state.items.currentItem})\r\n\r\nexport const Detail = connect(mapStateToProps)(Det)\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport {Preloader} from \"./components/Preloader\";\nimport {ListContainer} from \"./components/ListContainer\";\n/*import {compose} from \"redux\";*/\nimport {connect} from \"react-redux\";\nimport {Detail} from \"./components/Detail\";\n\n\n//-------стили--------------\nimport './App.css'\nimport './components/scss/main.scss';\n\nconst App = ({appInitialized}) => {\n\n    return (!appInitialized)\n        ? <Preloader/>\n        : <BrowserRouter>\n            <div className='app-wrapper'>\n                <div className=\"container\">\n                    <Route exact path='/' render={() => <ListContainer/>}/>\n                    <Route exact path='/items/:id' component={Detail}/>\n                </div>\n            </div>\n        </BrowserRouter>\n}\nconst mapStateToProps = (state) => ({\n    appInitialized: state.app.appInitialized\n});\n\nexport default connect(mapStateToProps, {})(App);\n","\r\nconst initialState = {\r\n    appInitialized: true,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"APP_INITIALIZED\":\r\n            return {\r\n                ...state,\r\n                appInitialized: true\r\n            };\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default appReducer;\r\n\r\nexport const appInit = () => ({type: \"APP_INITIALIZED\"})","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare  from \"redux-thunk\"\r\n\r\nimport appReducer from \"./app-reducer\";\r\nimport itemsReducer from \"./item-reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    items:itemsReducer,\r\n    app:appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './redux/reducer';\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n            <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/1_9EBHIOzhE1XfMYoKz1JcsQ.26ef8bb4.gif\";"],"sourceRoot":""}